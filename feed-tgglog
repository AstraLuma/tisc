#!/usr/bin/python
# -*- tab-width: 4; use-tabs: 1; coding: utf-8 -*-
# vim:tabstop=4:noexpandtab:
"""
Downloads the given day from irclog.perlgeek.de and feeds it into couch.
"""
import urllib2, sys, re, time, tisc
from uuid import uuid4
URL_TEMPLATE = "http://irclog.perlgeek.de/text.pl?channel=thegeekgroup;date=%(year)i-%(month)02i-%(day)02i"
LINE_PATTERN = re.compile(r"^(\d{2}):(\d{2}) +(\* )?([^ ]+)(?: +(.*))?[\n\r]*$")

TISC = tisc.Tisc()

print "Loading logs..."
for argv in sys.argv[1:]:
	date = re.match("(?P<year>\d+)-(?P<month>\d+)-(?P<day>\d+)", argv).groupdict()
	date = dict(zip(date.keys(), map(int, date.values())))

	print "\t%(year)i-%(month)02i-%(day)02i..." % date
	docstofeed = []

	log = urllib2.urlopen(URL_TEMPLATE % date)
	try:
		for line in log:
			if line.startswith("Time "): 
				break
		for ln, line in enumerate(log):
			if line.startswith("</pre>"):
				break
			m = LINE_PATTERN.match(line)
			if m is None:
				sys.exit("Unknown line: %r" % line)
			hr, mn, action, nick, text = m.groups()
		
			doc = {
				'_id': '%i-%02i-%02i-%05i' % (date['year'], date['month'], date['day'], ln),
				'when': map(int, [date['year'], date['month'], date['day'], hr, mn]),
				'channel': '#thegeekgroup', 
				'sender': nick,
				'text': text or "",
				}
			if action:
				doc['event'] = 'action'
			else:
				doc['event'] = 'message'
		
			docstofeed.append(doc)
	finally:
		log.close()

	TISC.couch().update(docstofeed)
TISC.couch().compact()
